// Pairwise Feedback to Ranking
1.0 : rating(U, I1) - rating(U, I2) = ranking(U, I1) - ranking(U, I2)

// Neighborhood-based collaborative filtering
1.0 : rated(U,I1) & rated(U,I2) & ranking(U,I1) & sim_items(I1,I2) >> ranking(U,I2)^2
1.0 : rated(U,I1) & rated(U,I2) & ranking(U,I2) & sim_items(I1,I2) >> ranking(U,I1)^2

1.0 : rated(U1,I) & rated(U2,I) & ranking(U1,I) & sim_users(U1,U2) >> ranking(U2,I)^2
1.0 : rated(U1,I) & rated(U2,I) & ranking(U2,I) & sim_users(U1,U2) >> ranking(U1,I)^2

// Demographic and content based similarity
1.0 : rated(U,I1) & rated(U,I2) & ranking(U,I1) & sim_content_items(I1,I2) >> ranking(U,I2)^2
1.0 : rated(U1,I) & rated(U2,I) & ranking(U1,I) & sim_demo_users(U1,U2) >> ranking(U2,I)^2

// Predictions by local non-negative matrix factorization and naive bayes predictor
1.0 : nmf_rating(U, I) & target(U, I) >> rating(U, I)^2
1.0 : rating(U, I) & target(U, I) >> nmf_rating(U, I)^2

1.0 : svd_rating(U, I) & target(U, I) >> rating(U, I)^2
1.0 : rating(U, I) & target(U, I) >> svd_rating(U, I)^2

//1.0 : nb_rating(U, I) & target(U, I) >> rating(U, I)^2
//1.0 : rating(U, I) & target(U, I) >> nb_rating(U, I)^2

// Priors
1.0 : rating(U, I) = 1.0 ^2
1.0 : ~rating(U, I) ^2